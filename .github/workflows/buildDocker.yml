name: Docker Build
permissions:
      contents: read
      packages: write

on:
  push:
    branches: [ main, master ]

jobs:
  Build-Docker-Images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    ## logins to ghcr
    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # ## builds and pushes the backend image to ghcr
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./app/backend
    #     push: true
    #     tags: |
    #         ghcr.io/${{ github.repository_owner }}/backend:v0.3
    
    # ## builds and pushes the frontend image to ghcr
    # - name: Build Docker frontend image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./app/frontend
    #     push: true
    #     tags: |
    #         ghcr.io/${{ github.repository_owner }}/frontend:v0.12

    - name: Testing on a k8s Kind Cluster
      uses: helm/kind-action@v1.4.0
      ## makes sure cluster is up and running
    - run: |
        kubectl cluster-info

    - name : deploy frontend app to k8s cluster
      run: |
        helm install frontend ./charts/frontend --set image.repository=ghcr.io/aqyakush/frontend --set image.pullPolicy=IfNotPresent
        pod_name=$(kubectl get pods --no-headers -o custom-columns=":metadata.name" | grep '^frontend')
        kubectl get pods
        sleep 20s
        kubectl describe pod $pod_name
        # kubectl wait --for=condition=Running pod/$pod_name --timeout=200s
        sleep 20s
        kubectl describe pod $pod_name
        kubectl get pods
    
    - name : deploy backend app to k8s cluster
      run: |
        helm install backend ./charts/backend --set image.repository=ghcr.io/aqyakush/backend --set image.pullPolicy=IfNotPresent
        pod_name=$(kubectl get pods --no-headers -o custom-columns=":metadata.name" | grep '^backend')
        kubectl get pods
        sleep 20s
        # kubectl wait --for=condition=Running pod/$pod_name --timeout=200s
        kubectl get pods
        kubectl get ingress
      
    - name: Testing the app
      run: |
        # curl -i http://localhost:3000/
        # chmod +x ./utils/wait_for_ingress.sh
        # ./utils/wait_for_ingress.sh
        # address=$(kubectl get ingress -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')
        # curl -i http://$address/
        sleep 120s
        kubectl get ns
        kubectl port-forward -n ingress-nginx service/ingress-nginx-controller 8080:80
        curl -i http://localhost:8080/